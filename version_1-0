def makeCode():

    codes = {'A' : '/', 'a' : '1', 'B' : '«', 'b' : '0', 'C' : '°', 'c' : '2', 'D' : '3', 'd' : '>', 'E' : '4', 'e' : '±', 'F' : '5', 'f': '<', 'G' : '6', 'g' : ':', 'H' : '7',
             'h': ';', 'I' : '8', 'i' : '!', 'K' : '9', 'k' : '@', 'L' : '{', 'l' : '#', 'M': '}', 'm': '$', 'N': '[', 'n': '%', 'O': ']', 'o': '^', 'P' : '|', 'p': '&',
             'Q': '`', 'q': '*', 'R': '(', 'r' : '~', 'S' : '-', 's' : '_', 'T' : '=', 't' : '+', 'U' : '³', 'u': '¡', 'V' : '¢', 'v' : '£', 'W' : '¤', 'w': '¥',
             'X' : '¦', 'x' : '§', 'Y' : '©', 'y' : 'ª', 'Z' : '®', 'z' : '¾' } # this is my alphabet... this took a long time because Python only natively supports US unicode characters.....

    invCodes = {v: k for k, v in codes.items()} # this little bit of code reverses the entire library for decryption
    
    
    return codes, invCodes # return the new alphabet dictionary, and the inverted one

def encryptMessage(): # this encrypts the message
    codes, invCodes, = makeCode() # get the dictionaries

    option = input("\nChoose which file you would like to open (must include file extention): ") # pick the file you want to encrypt
    
    with open(option,"rt") as file1: # open the file that the user chose
        encrypted = "" # make a variable for the encrypted message
        for line in file1: # this for loop checks every letter, and if they are any letters from A-Z or a-z, change them into code.
            for char in line:
                if char in codes: # this bit of code makes sure it doesn't crash if there is a "," or "." or a number
                    encrypted += codes[char]
                else: encrypted += char
    newFile = input("\nChoose which file you would like to save the encrypted message to (must include file extention): ") # name a new file and save the encrypted message

    with open(newFile, "w+") as file2: 
        file2.write(encrypted) # write the message to the chosen file
    whatToDo() # go back to menu

def decryptMessage(): # this decrypts the message 
    codes, invCodes = makeCode() # get the dictionaries

    unEncrypted = "" # make a variable for decrypted message
    
    option = input("\nChoose which file you would like to decrypt: (including file extention): ")
    with open(option,"rt") as file3: ##############
        for line in file3: #########################
            for char in line:#######################
                if char in invCodes: ############### THIS IS ALL THE SAME AS IN encryptMessage() but using the reversed dictionary
                    unEncrypted += invCodes[char]###
                else: unEncrypted += char###########
    print("\n",unEncrypted)
    whatToDo() # go back to menu

def makeMessage(): # this is for if the user wants to make the message themselves without using file explorer
    option = input("\nPlease enter the name of your new file, in this format: 'filename.txt': ")
    with open(option, "w+") as file4:
        words = input("\nPlease enter your text.")
        file4.write(words)
    whatToDo() # return to menu

def whatToDo(): # this is the 'main menu', all options are made here, all functions are run here
    print("\nWelcome to the message encryptor by Tyler Brock")
    choice = input("\nWould you like to encrypt or decrypt? Press E for encrypt, or D for decrypt, M to make a new file, or Q to Quit: ")
    if choice.lower() == "e":
        encryptMessage()
    elif choice.lower() == "d":
        decryptMessage()
    elif choice.lower() == "q":
        quit
    elif choice.lower() == "m":
        makeMessage()
    else: whatToDo()


whatToDo() # run the main menu
